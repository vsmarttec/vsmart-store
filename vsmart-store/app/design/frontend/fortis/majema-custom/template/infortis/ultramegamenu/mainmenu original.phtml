<?php
/**
 * Main menu
 */
?>
<?php
	$helper = Mage::helper('ultramegamenu');
?>
<?php if ($helper->getCfg('general/enable')): ?>

	<?php
		$mode = $helper->getCfg('general/mode');
		//-1    = mobile menu only
		// 0    = both
		// 1    = regular dropdown menu only
		
		$categories = $helper->getCfg('general/categories');
		$linksHtml = $this->getChildHtml('block_nav_links');
	?>



	<?php //Mobile menu trigger %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ?>

	<?php if ($mode <= 0): //Mode: mobile or both ?>

		<div class="mobnav-trigger-wrapper grid-full">
			<a class="mobnav-trigger" href="#">
				<span class="trigger-icon"><span class="line"></span><span class="line"></span><span class="line"></span></span>
				<span><?php echo $this->__('Menu'); ?></span>
			</a>
		</div>

	<?php endif; ?>



	<?php //Menu %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ?>

	<ul id="nav" class="grid-full nav-regular opt-fx-fade-inout <?php echo $helper->getBlocksVisibilityClassOnMobile(); ?>">
	
		<?php //Home link -------------------------------------------------- ?>
		<?php //Single home link icon ?>
		<?php if ($helper->getCfg('mainmenu/home_link_icon')): ?>
			<?php
				//Home link icon suffix
				$suffix = $helper->getSingleHomelinkIconSuffix();
			?>
			<li class="nav-item nav-item--home nav-item--homeicon level0 level-top">
				<a class="level-top feature feature-icon-hover" href="<?php echo $this->getBaseUrl(); ?>"><span class="icon i-home<?php echo $suffix; ?> force-no-bg-color"></span></a>
			</li>
		<?php endif; ?>

		<?php //Home link displayed inside menu item ?>
		<?php if ($helper->getCfg('mainmenu/home') || $helper->getCfg('mainmenu/home_img')): ?>
			<?php
				$homeLinkWrapperClass = '';
				$homeLinkClass = '';
				$homeLinkText = '';
				$homeLinkImg = '';
				
				//If home link with image
				if ($helper->getCfg('mainmenu/home_img'))
				{
					//Home link icon suffix
					$suffix = $helper->getHomeIconSuffix();
				
					$homeLinkWrapperClass = 'nav-home-img';
					$homeLinkClass = 'feature feature-icon-hover';
					$homeLinkImg = '<span class="icon i-home' . $suffix . '"></span>';
				}
				
				//If home link with text
				if ($helper->getCfg('mainmenu/home'))
				{
					$homeLinkText = '<span>' . $this->__('Home') . '</span>';
				}
			?>
			<li class="nav-item nav-item--home level0 level-top <?php echo $homeLinkWrapperClass; ?>">
				<a class="level-top feature feature-icon-hover" href="<?php echo $this->getBaseUrl(); ?>"><?php echo $homeLinkImg, $homeLinkText; ?></a>
			</li>
		<?php endif; ?>
		<?php //end: home link -------------------------------------------------- ?>
		
		<?php //Categories ?>
		<?php if ($categories): ?>
			<?php echo $this->renderCategoriesMenuHtml(FALSE, 0, 'level-top'); ?>
		<?php endif; ?>
	
		<?php //Static block as a dropdown ?>
		<?php if ($tmpHtml = $this->getChildHtml('block_header_nav_dropdown')): ?>
			<li class="nav-item nav-item--parent nav-item--only-blocks level0 level-top parent nav-custom-link<?php if ($helper->getCfg('mainmenu/custom_block_floating')) echo ' right'; ?>">
				<?php // Get the block title, and display it as menu item
					$blockTitle = Mage::getModel('cms/block')
						->setStoreId(Mage::app()->getStore()->getId())->load('block_header_nav_dropdown')->getTitle();
				?>
				<a class="level-top no-click" href="#"><span><?php echo $blockTitle; ?></span><span class="caret">&nbsp;</span></a>
				<span class="opener">&nbsp;</span>
				<div class="nav-panel nav-panel--dropdown full-width">
					<div class="nav-panel-inner">
						<div class="header-nav-dropdown-wrapper nav-block std grid-full clearer"><?php echo $tmpHtml; ?></div>
					</div>
				</div>
			</li>
		<?php endif; ?>
		
		<?php //Custom links ?>
		<?php echo $linksHtml; ?>
		
	</ul>



	<?php //Scripts %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ?>

	<script type="text/javascript">
	//<![CDATA[



		var MegaMenu = {

			mode: <?php echo $mode; ?>
			, threshold: <?php echo intval($helper->getCfg('mobilemenu/threshold')); ?>
			, currentState: 'regular'

			, bar: jQuery('#nav')
			, itemSelector: 'li'
			, panelSelector: '.nav-panel'
			, openerSelector: '.opener'
			, isTouchDevice: ('ontouchstart' in window) || (navigator.msMaxTouchPoints > 0)
			, ddDelayIn: 0
			, ddDelayOut: 50
			, ddAnimationDuration: 100

			, activateMobileMenu : function()
			{
				MegaMenu.currentState = 'mobile';
				jQuery('.mobnav-trigger-wrapper').show();
				MegaMenu.bar.addClass('nav-mobile acco').removeClass('nav-regular');
			}

			, activateRegularMenu : function()
			{
				MegaMenu.currentState = 'regular';
				MegaMenu.bar.addClass('nav-regular').removeClass('nav-mobile acco');
				jQuery('.mobnav-trigger-wrapper').hide();
			}

			, cleanUpAfterMobileMenu : function()
			{
				<?php //Remove display modifications of all panels ?>
				MegaMenu.bar.find('.nav-panel').css('display', '');
			}

			, prepareMobileMenu : function()
			{
				<?php //Hide all panels ?>
				MegaMenu.bar.find('.nav-panel').hide();

				<?php //Show panels of items with active class ?>
				MegaMenu.bar.find('.item-active').each( function() {
					jQuery(this).children('.nav-panel').show();
				});
			}

			, firstInit : function()
			{
				if (jQuery(window).width() < MegaMenu.threshold)
				{
					MegaMenu.activateMobileMenu();
				}
				else
				{
					MegaMenu.cleanUpAfterMobileMenu();
					MegaMenu.activateRegularMenu();
				}
			}

			, reinit : function()
			{
				if (jQuery(window).width() < MegaMenu.threshold)
				{
					<?php //If previous state was regular: ?>
					if (MegaMenu.currentState === 'regular')
					{
						MegaMenu.activateMobileMenu();
						MegaMenu.prepareMobileMenu();
					}
				}
				else
				{
					<?php //If previous state was mobile: ?>
					if (MegaMenu.currentState === 'mobile')
					{
						MegaMenu.activateRegularMenu();
						MegaMenu.cleanUpAfterMobileMenu();
					}
				}
			}
		}; //end: MegaMenu



	<?php //Mode: mobile or both ------------------------------------------------- ?>
	<?php if ($mode <= 0): ?>

		<?php if ($mode == 0): //Mode: both ?>

			MegaMenu.bar.accordion(MegaMenu.panelSelector, MegaMenu.openerSelector, MegaMenu.itemSelector);
			MegaMenu.firstInit();
			jQuery(window).on('resize', MegaMenu.reinit);

		<?php else: //Mode: mobile ($mode < 0) ?>

			MegaMenu.bar.accordion(MegaMenu.panelSelector, MegaMenu.openerSelector, MegaMenu.itemSelector);
			MegaMenu.activateMobileMenu();

		<?php endif; ?>

		//Toggle mobile menu
		jQuery('a.mobnav-trigger').on('click', function(e) {
			e.preventDefault();
			if (jQuery(this).hasClass('active'))
			{
				MegaMenu.bar.removeClass('show');
				jQuery(this).removeClass('active');
			}
			else
			{
				MegaMenu.bar.addClass('show');
				jQuery(this).addClass('active');					
			}
		})<?php if (!$helper->getCfg('mobilemenu/collapsed')): ?>.click()<?php endif; //Menu initially collapsed/opened ?>;

	<?php endif; //end: mode mobile or both  ?>



	<?php //Mode: regular or both ------------------------------------------------- ?>
	<?php if ($mode >= 0): ?>

		jQuery(function($) {

			var menubar = MegaMenu.bar;

			<?php //Non-clickable links ?>
			menubar.on('click', '.no-click', function(e) {
				e.preventDefault();
			});

			<?php //Menu top-level dropdowns ?>
			menubar.on('mouseenter', 'li.parent.level0', function() {
				
				if (false === menubar.hasClass('nav-mobile'))
				{
					var item = $(this);
					var dd = item.children('.nav-panel');

					var itemPos = item.position();
					var ddPos = { left: itemPos.left, top: itemPos.top + item.height() };
					if (dd.hasClass('full-width')) { ddPos.left = 0; }

					<?php ///////////////////////////////////////////////////////////////////// ?>
					<?php //Prevent dropdowns from spilling out of the viewport ?>
					dd.removeClass('tmp-full-width');

				<?php if ($helper->getCfg('mainmenu/spill')): //Align dropdown with menu bar ?>
					var ddConOffset = 0;
					var outermostCon = menubar;
				<?php else: //Align dropdown with viewport ?>
					var ddConOffset = menubar.offset().left;
					var outermostCon = $(window);
				<?php endif; ?>

					var outermostContainerWidth = outermostCon.width();
					var ddOffset = ddConOffset + ddPos.left;
					var ddWidth = dd.outerWidth();

					<?php //If the dropdown will stick out of the outermostContainer (menu bar) ?>
					if ((ddOffset + ddWidth) > outermostContainerWidth)
					{
						<?php //Calculate width of the dropdown part that will stick out of the viewport and calculate the new corrected position of the dropdown ?>
						var diff = (ddOffset + ddWidth) - outermostContainerWidth;
						var ddPosLeft_NEW = ddPos.left - diff;

						<?php //Calculate new offset of the dropdown using the new corrected position of the dropdown ?>
						var ddOffset_NEW = ddOffset - diff;

						<?php //Check, if the dropdown will stick out of the viewport at the other side too ?>
						if (ddOffset_NEW < 0)
						{
							<?php //If yes, apply special class and set position of the dropdown to zero ?>
							dd.addClass('tmp-full-width');
							ddPos.left = 0;
						}
						else
						{
							<?php //If no, apply the new corrected position of the dropdown ?>
							ddPos.left = ddPosLeft_NEW;
						}
					}
					<?php ///////////////////////////////////////////////////////////////////// ?>

					dd
						.css({
							'left' : ddPos.left + 'px',
							'top'  : ddPos.top + 'px'
						})
						.stop(true, true).delay(MegaMenu.ddDelayIn).slideDown(MegaMenu.ddAnimationDuration, "easeOutCubic");
				}

			}).on('mouseleave', 'li.parent.level0', function() {
				
				if (false === menubar.hasClass('nav-mobile'))
				{
					$(this).children(".nav-panel")
					.stop(true, true).delay(MegaMenu.ddDelayOut).slideUp(MegaMenu.ddAnimationDuration, "easeInCubic");
				}

			}); //end: menu top-level dropdowns

		}); //end: on document ready

		jQuery(window).on("load", function() {

			var menubar = MegaMenu.bar;

			if (MegaMenu.isTouchDevice)
			{
				menubar.on('click', 'a', function(e) {

					link = jQuery(this);
					if (!menubar.hasClass('nav-mobile') && link.parent().hasClass('nav-item--parent'))
					{
						if (!link.hasClass('ready'))
						{
							e.preventDefault();
							menubar.find('.ready').removeClass('ready');
							link.parents('li').children('a').addClass('ready');
						}
					}

				}); //end: on click
			} //end: if isTouchDevice

		}); //end: on load

	<?php endif; //end: regular or both ?>

	//]]>
	</script>

<?php endif; //end: if 'general/enable' ?>
