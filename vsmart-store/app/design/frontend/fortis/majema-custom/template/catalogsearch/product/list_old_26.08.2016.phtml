<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
?>

<?php
$_productCollection=$this->getLoadedProductCollection();
$_collectionSize = $_productCollection->count();
?>

<?php if ($_collectionSize && $tmpHtml = $this->getChildHtml('block_category_above_collection')): ?>
    <div class="block_category_above_collection std"><?php echo $tmpHtml; ?></div>
<?php endif; ?>

<?php if(!$_collectionSize): ?>
    <?php if ($tmpHtml = $this->getChildHtml('block_category_above_empty_collection')): ?>
        <div class="block_category_above_empty_collection std"><?php echo $tmpHtml; ?></div>
    <?php else: ?>
        <p class="note-msg empty-catalog"><?php echo $this->__('There are no products matching the selection.') ?></p>
    <?php endif; ?>
<?php else: ?>

    <?php
    $_helper = $this->helper('catalog/output');
    $theme = $this->helper('fortis');
    $helpLabels = $this->helper('fortis/labels');
    $helpTemplate = $this->helper('fortis/template');
    $helpImg = $this->helper('infortis/image');

    //Image size
    $imgWidth = intval($theme->getCfg('category/image_width'));
    $imgHeight = $imgWidth;

    //If image width is not specified, use default values
    if ($imgWidth <= 0)
    {
        $imgWidth = 295;
        $imgHeight = 295;
    }

    //Image aspect ratio settings
    $keepAspectRatio = $theme->getCfg('category/aspect_ratio');
    if ($keepAspectRatio)
    {
        $imgHeight = 0; //Height will be calculated automatically (based on width) to keep the aspect ratio
        $catViewKeepFrame = FALSE;
    }
    else
    {
        $catViewKeepFrame = TRUE;
    }

    if (Mage::registry('catViewKeepFrame') === NULL)
    {
        Mage::register('catViewKeepFrame', $catViewKeepFrame);
    }

    //Hide toolbar
    $hideToolbar = false;
    if ($this->getHideToolbar())
    {
        $hideToolbar = true;
    }
    ?>

    <div class="category-products">
    <?php if (!$hideToolbar): ?>
        <?php echo $this->getToolbarHtml() ?>
    <?php endif; ?>
    <?php if($this->getMode()!='grid'): //List mode ?>

        <?php
        //Get list configuration array
        $lc = $theme->getCfgGroup('category_list');

        //List classes
        $listClasses = '';
        if ($lc['hover_effect'])
            $listClasses = ' hover-effect';
        if ($lc['style_boxed'])
            $listClasses .= ' products-list-style1';
        ?>

        <?php $_iterator = 0; ?>
        <ul class="products-list<?php if($listClasses) echo $listClasses; ?>" id="products-list">
            <?php foreach ($_productCollection as $_product): ?>
                <li class="item<?php if( ++$_iterator == sizeof($_productCollection) ): ?> last<?php endif; ?>">
                    <?php //Product description ?>
                    <div class="product-shop grid12-6 mobile-grid-half">
                        <div class="product-shop-inner">
                            <?php $_productNameStripped = $this->stripTags($_product->getName(), null, true); ?>
                            <h2 class="product-name"><a href="<?php echo $this->getFullProductUrl($_product) ?>" title="<?php echo $_productNameStripped; ?>"><?php echo $_helper->productAttribute($_product, $_product->getName() , 'name'); ?></a></h2>
                        </div>
                    </div>

                    <div class="grid12-6 mobile-grid-half">
                        <?php echo $this->getPriceHtml($_product, true) ?>
                        <?php if($_product->isSaleable()): ?>
                            <!-- If product is digital product with custom options, remove add to cart button, replace with "Read more" button list mode -->
                            <?php if ($_product->isDigitalProduct == 1) : ?>
                                <span class="list-view-amount" style="width:100px;"></span>
                                <button type="submit" title="Beställ" class="button btn-cart" onclick="setLocation('<?php echo $this->getProductUrl($_product) ?>')"><span><span>Beställ</span></span></button>
                            <?php else: ?>
                                <form action="<?php echo $this->getAddToCartUrl($_product) ?>" method="post" id="product_addtocart_form_<?php echo $_product->getId(); ?>">
                            <span class="list-view-amount category-view-cart">
                                <div class="add-to-cart-main">
                                    <label for="qty"><?php echo $this->__('Qty:') ?></label>
                                    <div class="add-to-cart-qty">
                                        <button class="button-arrow button-down" type="button">-</button>
                                        <input name="qty" type="text" class="input-text qty" id="qty" maxlength="12" value="1" />
                                        <button class="button-arrow button-up" type="button">+</button>
                                    </div>
                                </div>
                            </span>
                                    <p><button type="submit" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button></p>
                                </form>
                                <script type="text/javascript">
                                    var productAddToCartForm = new VarienForm('product_addtocart_form_<?php echo $_product->getId(); ?>');
                                    productAddToCartForm.submit = function(button, url) {
                                        if (this.validator.validate()) {
                                            var form = this.form;
                                            var oldUrl = form.action;

                                            if (url) {
                                                form.action = url;
                                            }
                                            var e = null;
                                            try {
                                                this.form.submit();
                                            } catch (e) {
                                            }
                                            this.form.action = oldUrl;
                                            if (e) {
                                                throw e;
                                            }

                                            if (button && button != 'undefined') {
                                                button.disabled = true;
                                            }
                                        }
                                    }.bind(productAddToCartForm);
                                </script>
                            <?php endif; ?>
                        <?php else: ?>
                            <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                        <?php endif; ?>
                    </div>

                </li>
            <?php endforeach; ?>
        </ul>
        <script type="text/javascript">decorateList('products-list', 'none-recursive')</script>
        <script type="text/javascript">
            //&lt;![CDATA[
            jQuery(function($) {
                $('.add-to-cart-qty .button-up').click(function() {
                    $qty = $(this).parent().find('.qty');
                    qty = parseInt($qty.val()) + 1;
                    $qty.val(qty);
                });

                $('.add-to-cart-qty .button-down').click(function() {
                    $qty = $(this).parent().find('.qty');
                    qty = parseInt($qty.val()) - 1;
                    if (qty <= 0)
                        qty = 1;
                    $qty.val(qty);
                });
            });
            //]]&gt;
        </script>
    <?php else: //Grid mode ?>

    <?php
    //Get grid configuration array
    $gc = $theme->getCfgGroup('category_grid');

    //Get number of columns (from parameter or from theme config)
    $columnCount = 3;
    if ($this->getGridColumnCount())
    {
        $columnCount = $this->getGridColumnCount();
    }
    else
    {
        $columnCount = $gc['column_count'];
    }

    //Grid classes
    $gridClasses = '';
    $productNameClasses = '';
    if ($gc['display_name'] == 2 && $gc['display_name_single_line'] == true)
        $gridClasses .= ' single-line-name';
    if ($gc['display_name'] == 1)
        $productNameClasses .= ' display-onhover';
    if ($gc['centered'])
        $gridClasses .= ' centered';
    if ($gc['hover_effect'])
        $gridClasses .= ' hover-effect';
    if ($gc['equal_height'])
        $gridClasses .= ' equal-height';
    if ($gc['style_boxed'])
        $gridClasses .= ' products-grid-style1';

    //Size of grid elements
    if ($columnCount >= 6)
    {
        $gridClasses .= ' size-xs';
    }
    elseif ($columnCount >= 4)
    {
        $gridClasses .= ' size-s';
    }

    //Container "actions" at the bottom of the grid item stores button and add-to links
    //If at least one of those elements was set as "Display on hover" but no element was set as "Display":
    //apply appropriate classes to the container.
    $actionsClasses = '';
    if ($gc['display_addtocart'] == 1 || ($gc['display_addtolinks'] == 1 && !$gc['addtolinks_simple']))
    {
        $actionsClasses = ' display-onhover';
    }
    if ($gc['display_addtocart'] == 2 || ($gc['display_addtolinks'] == 2 && !$gc['addtolinks_simple']))
    {
        $actionsClasses = '';
    }
    ?>

        <ul class="products-grid category-products-grid itemgrid itemgrid-adaptive itemgrid-<?php echo $columnCount; ?>col<?php if($gridClasses) echo $gridClasses; ?>">
            <?php foreach ($_productCollection as $_product): ?>
                <li class="item">

                    <div class="product-image-wrapper" style="max-width:<?php echo $imgWidth; ?>px;">

                        <a href="<?php echo $this->getFullProductUrl($_product) ?>" title="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true); ?>" class="product-image">
                            <img id="product-collection-image-<?php echo $_product->getId(); ?>"
                                 src="<?php echo $helpImg->getImg($_product, $imgWidth, $imgHeight, 'small_image'); ?>"
                                 alt="<?php echo $this->stripTags($this->getImageLabel($_product, 'small_image'), null, true); ?>" />

                            <?php if ($theme->getCfg('category/alt_image')): ?>
                                <?php echo $theme->getAltImgHtml($_product, $imgWidth, $imgHeight); ?>
                            <?php endif; ?>

                            <?php echo $helpLabels->getLabels($_product); //Product labels ?>
                        </a>

                        <?php //Add-to links
                        if ($gc['display_addtolinks'] != 0 && $gc['addtolinks_simple'])
                        {
                            if ($gc['display_addtolinks'] == 1) //Display on hover
                                echo $helpTemplate->getCategoryAddtoLinksComplex_2($_product, $this->getAddToCompareUrl($_product), 'addto-links-icons addto-onimage display-onhover');
                            else //Always display
                                echo $helpTemplate->getCategoryAddtoLinksComplex_2($_product, $this->getAddToCompareUrl($_product), 'addto-links-icons addto-onimage');
                        }
                        ?>

                    </div> <!-- end: product-image-wrapper -->

                    <?php if ($gc['display_name'] != 0): ?>
                        <h2 class="product-name<?php echo $productNameClasses; ?>"><a href="<?php echo $this->getFullProductUrl($_product) ?>" title="<?php echo $this->stripTags($_product->getName(), null, true) ?>"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></a></h2>
                    <?php endif; ?>
                    <ul>
                        <li>
                            <strong>Beställnr:</strong> <?php echo nl2br($_product->getSku()) ?>
                        </li>
                        <?php if($this->htmlEscape($_product->getData('school_year')) != null ): ?>
                            <li>
                                <strong>Årskurs:</strong> <?php echo $this->htmlEscape($_product->getData('school_year')); ?>
                            </li>
                        <?php endif; ?>
                    </ul>

                    <?php
                    //Provides extra blocks on which to hang some features for products in the list
                    //Features providing UI elements targeting this block will display directly below the product name
                    //echo 'a: ' . $this->getChildHtml('name.after'); //TEST
                    //echo 'b: ' . $this->getChildHtml('reg2'); //TEST

                    if ($this->getChild('name.after')) {
                        $_nameAfterChildren = $this->getChild('name.after')->getSortedChildren();
                        foreach ($_nameAfterChildren as $_nameAfterChildName) {
                            $_nameAfterChild = $this->getChild('name.after')->getChild($_nameAfterChildName);
                            $_nameAfterChild->setProduct($_product);
                            echo $_nameAfterChild->toHtml();
                        }
                    }
                    ?>

                    <?php if ($_product->getRatingSummary()): ?>
                        <?php if ($gc['display_rating'] == 1): //Display on hover ?>
                            <div class="display-onhover ratings-wrapper"><?php echo $this->getReviewsSummaryHtml($_product, 'short') ?></div>
                        <?php elseif ($gc['display_rating'] == 2): //Always display ?>
                            <?php echo $this->getReviewsSummaryHtml($_product, 'short') ?>
                        <?php endif; ?>
                    <?php endif; ?>

                    <?php if ($gc['display_price'] == 1): //Display on hover ?>
                        <div class="display-onhover"><?php echo $this->getPriceHtml($_product, true); ?></div>
                    <?php elseif ($gc['display_price'] == 2): //Always display ?>
                        <?php echo $this->getPriceHtml($_product, true); ?>
                    <?php endif; ?>
                    <p><?php echo $this->htmlEscape($_product->getData('mini_description')); ?></p>

                    <?php
                    //If at least one element was set as "Display on hover" but no element was set as "Display":
                    //aggregate classes from those elements and apply them to the "actions" container.
                    $actionsClasses = '';
                    if ($gc['display_addtocart'] == 1 || ($gc['display_addtolinks'] == 1 && !$gc['addtolinks_simple']))
                    {
                        $actionsClasses = ' display-onhover';
                    }
                    if ($gc['display_addtocart'] == 2 || ($gc['display_addtolinks'] == 2 && !$gc['addtolinks_simple']))
                    {
                        $actionsClasses = '';
                    }
                    ?>

                    <div class="actions clearer<?php echo $actionsClasses; ?>">
                        <?php //Cart button ?>
                        <?php if ($gc['display_addtocart'] != 0): ?>
                            <?php if ($_product->isSaleable()): ?>
                                <!-- If product is digital product with custom options, remove add to cart button, replace with "Read more" button -->
                                <?php if ($_product->isDigitalProduct == 1) : ?>
                                    </br><button type="submit" title="Beställ" class="button btn-cart" onclick="setLocation('<?php echo $this->getProductUrl($_product) ?>')"><span><span>Beställ</span></span></button>
                                <?php else: ?>
                                    <form action="<?php echo $this->getAddToCartUrl($_product) ?>" method="post" id="product_addtocart_form_<?php echo $_product->getId(); ?>">
                                        <div class="category-view-cart">
                                            <div class="add-to-cart-main">
                                                <label for="qty"><?php echo $this->__('Qty:') ?></label>
                                                <div class="add-to-cart-qty">
                                                    <button class="button-arrow button-down" type="button">-</button>
                                                    <input name="qty" type="text" class="input-text qty" id="qty" maxlength="12" value="1" />
                                                    <button class="button-arrow button-up" type="button">+</button>
                                                </div>
                                            </div>
                                        </div>
                                        <button type="submit" title="<?php echo $this->__('Add to Cart') ?>" class="button btn-cart"><span><span><?php echo $this->__('Add to Cart') ?></span></span></button>
                                    </form>
                                    <script type="text/javascript">
                                        var productAddToCartForm = new VarienForm('product_addtocart_form_<?php echo $_product->getId(); ?>');
                                        productAddToCartForm.submit = function(button, url) {
                                            if (this.validator.validate()) {
                                                var form = this.form;
                                                var oldUrl = form.action;

                                                if (url) {
                                                    form.action = url;
                                                }
                                                var e = null;
                                                try {
                                                    this.form.submit();
                                                } catch (e) {
                                                }
                                                this.form.action = oldUrl;
                                                if (e) {
                                                    throw e;
                                                }

                                                if (button && button != 'undefined') {
                                                    button.disabled = true;
                                                }
                                            }
                                        }.bind(productAddToCartForm);
                                    </script>
                                <?php endif; ?>
                            <?php else: ?>
                                <p class="availability out-of-stock"><span><?php echo $this->__('Out of stock') ?></span></p>
                            <?php endif; ?>
                        <?php endif; ?>

                        <?php //Add-to links
                        if ($gc['display_addtolinks'] != 0 && !$gc['addtolinks_simple'])
                        {
                            echo $helpTemplate->getCategoryAddtoLinks($_product, $this->getAddToCompareUrl($_product), 'addto-gaps-right addto-texticons');
                        }
                        ?>
                    </div> <!-- end: actions -->
                </li>
            <?php endforeach; ?>
        </ul>
        <script type="text/javascript">
            //&lt;![CDATA[
            jQuery(function($) {
                $('.add-to-cart-qty .button-up').click(function() {
                    $qty = $(this).parent().find('.qty');
                    qty = parseInt($qty.val()) + 1;
                    $qty.val(qty);
                });

                $('.add-to-cart-qty .button-down').click(function() {
                    $qty = $(this).parent().find('.qty');
                    qty = parseInt($qty.val()) - 1;
                    if (qty <= 0)
                        qty = 1;
                    $qty.val(qty);
                });
            });
            //]]&gt;
        </script>

    <?php endif; //end: if grid mode ?>

    <?php if (!$hideToolbar): ?>
        <div class="toolbar-bottom">
            <?php echo $this->getToolbarHtml() ?>
        </div>
    <?php endif; ?>
    </div>
    <div id="boxes" categoryUrl="<?php echo $this->helper('core/url')->getCurrentUrl(); ?>">
        <!-- Do not remove div#mask, because you'll need it to fill the whole screen -->
        <div id="mask"></div>
        <!-- #customize your modal window here -->
        <div id="dialog" class="window">
            <div id="product_data"></div>
        </div>
    </div>

<?php endif; ?>

<?php if ($_collectionSize && $tmpHtml = $this->getChildHtml('block_category_below_collection')): ?>
    <div class="block_category_below_collection std"><?php echo $tmpHtml; ?></div>
<?php endif; ?>

<?php
//Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        echo $_afterChild->toHtml();
    }
}
?>
